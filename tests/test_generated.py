# Generated by ChatGPT
import unittest

from mind import mind


class TestRecordClass(unittest.TestCase):

    def setUp(self):
        self.record = mind.Record(
            sn=mind.Sequence(1),
            hash="some_hash",
            stuff=mind.Epoch(500_000),
            stamp=mind.Epoch(600_000),
            old_state=mind.Phase.ABSENT,
            new_state=mind.Phase.ACTIVE
        )

    def test_str_method(self):
        self.assertEqual(str(self.record),
                         "Record [1, 1970-01-01T00:00, some_hash, 7a120, "
                         "ABSENT->ACTIVE]")

    def test_bool_method(self):
        self.assertTrue(self.record)

    def test_next_method(self):
        self.assertEqual(self.record.next(), 2)

    def test_parent_method(self):
        parent_record = self.record.parent()
        self.assertEqual(parent_record, 0)

    def test_canonical_method(self):
        canonical_str = self.record.canonical()
        self.assertEqual(canonical_str, "Record [1,some_hash]")

    def test_act_method(self):
        transition = self.record.act()
        self.assertEqual(transition, mind.Transition.ADD)

    def test_constraints_method(self):
        constraints = self.record.constraints()
        self.assertEqual(constraints, [])
